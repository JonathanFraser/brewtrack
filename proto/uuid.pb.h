// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uuid.proto

#ifndef PROTOBUF_uuid_2eproto__INCLUDED
#define PROTOBUF_uuid_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_uuid_2eproto();
void protobuf_AssignDesc_uuid_2eproto();
void protobuf_ShutdownFile_uuid_2eproto();

class uuid;

// ===================================================================

class uuid : public ::google::protobuf::Message {
 public:
  uuid();
  virtual ~uuid();

  uuid(const uuid& from);

  inline uuid& operator=(const uuid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const uuid& default_instance();

  void Swap(uuid* other);

  // implements Message ----------------------------------------------

  uuid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const uuid& from);
  void MergeFrom(const uuid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id1 = 1;
  inline bool has_id1() const;
  inline void clear_id1();
  static const int kId1FieldNumber = 1;
  inline ::google::protobuf::uint32 id1() const;
  inline void set_id1(::google::protobuf::uint32 value);

  // required uint32 id2 = 2;
  inline bool has_id2() const;
  inline void clear_id2();
  static const int kId2FieldNumber = 2;
  inline ::google::protobuf::uint32 id2() const;
  inline void set_id2(::google::protobuf::uint32 value);

  // required uint32 id3 = 3;
  inline bool has_id3() const;
  inline void clear_id3();
  static const int kId3FieldNumber = 3;
  inline ::google::protobuf::uint32 id3() const;
  inline void set_id3(::google::protobuf::uint32 value);

  // required uint32 id4 = 4;
  inline bool has_id4() const;
  inline void clear_id4();
  static const int kId4FieldNumber = 4;
  inline ::google::protobuf::uint32 id4() const;
  inline void set_id4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:uuid)
 private:
  inline void set_has_id1();
  inline void clear_has_id1();
  inline void set_has_id2();
  inline void clear_has_id2();
  inline void set_has_id3();
  inline void clear_has_id3();
  inline void set_has_id4();
  inline void clear_has_id4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id1_;
  ::google::protobuf::uint32 id2_;
  ::google::protobuf::uint32 id3_;
  ::google::protobuf::uint32 id4_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_uuid_2eproto();
  friend void protobuf_AssignDesc_uuid_2eproto();
  friend void protobuf_ShutdownFile_uuid_2eproto();

  void InitAsDefaultInstance();
  static uuid* default_instance_;
};
// ===================================================================


// ===================================================================

// uuid

// required uint32 id1 = 1;
inline bool uuid::has_id1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void uuid::set_has_id1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void uuid::clear_has_id1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void uuid::clear_id1() {
  id1_ = 0u;
  clear_has_id1();
}
inline ::google::protobuf::uint32 uuid::id1() const {
  return id1_;
}
inline void uuid::set_id1(::google::protobuf::uint32 value) {
  set_has_id1();
  id1_ = value;
}

// required uint32 id2 = 2;
inline bool uuid::has_id2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void uuid::set_has_id2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void uuid::clear_has_id2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void uuid::clear_id2() {
  id2_ = 0u;
  clear_has_id2();
}
inline ::google::protobuf::uint32 uuid::id2() const {
  return id2_;
}
inline void uuid::set_id2(::google::protobuf::uint32 value) {
  set_has_id2();
  id2_ = value;
}

// required uint32 id3 = 3;
inline bool uuid::has_id3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void uuid::set_has_id3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void uuid::clear_has_id3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void uuid::clear_id3() {
  id3_ = 0u;
  clear_has_id3();
}
inline ::google::protobuf::uint32 uuid::id3() const {
  return id3_;
}
inline void uuid::set_id3(::google::protobuf::uint32 value) {
  set_has_id3();
  id3_ = value;
}

// required uint32 id4 = 4;
inline bool uuid::has_id4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void uuid::set_has_id4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void uuid::clear_has_id4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void uuid::clear_id4() {
  id4_ = 0u;
  clear_has_id4();
}
inline ::google::protobuf::uint32 uuid::id4() const {
  return id4_;
}
inline void uuid::set_id4(::google::protobuf::uint32 value) {
  set_has_id4();
  id4_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_uuid_2eproto__INCLUDED
